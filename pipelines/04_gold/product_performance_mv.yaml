# This pipeline creates a product performance materialized view
# Pipeline variable puts the generate files in the same folder for the pipeline to pick up
pipeline: gold_load
# Flowgroup are conceptual artifacts and has no functional purpose
# there are used to group actions together in the generated files
flowgroup: product_performance_mv

actions:

  - name: product_performance_mv_sql
    type: load
    source:
      type: sql
      sql: |
        SELECT 
          p.part_id,
          p.name as product_name,
          p.manufacturer,
          p.brand,
          p.type,
          COUNT(DISTINCT l.order_id) as orders_count,
          SUM(l.quantity) as total_quantity_sold,
          SUM(l.extended_price) as total_revenue,
          AVG(l.extended_price / l.quantity) as avg_unit_price,
          SUM(l.extended_price * l.discount) as total_discount_given,
          AVG(l.discount) as avg_discount_rate,
          DATE_TRUNC('month', o.order_date) as month
        FROM {catalog}.{silver_schema}.part_dim p
        JOIN {catalog}.{silver_schema}.lineitem_fct l ON p.part_id = l.part_id
        JOIN {catalog}.{silver_schema}.orders_fct o ON l.order_id = o.order_id
        GROUP BY p.part_id, p.name, p.manufacturer, p.brand, p.type, DATE_TRUNC('month', o.order_date)
    target: v_product_performance_mv_sql
    

  - name: write_product_performance_mv
    type: write
    source: v_product_performance_mv_sql
    write_target:
      type: materialized_view
      database: "{catalog}.{gold_schema}"
      table: "product_performance_mv" 