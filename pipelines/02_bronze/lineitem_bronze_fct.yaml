pipeline: bronze_load
flowgroup: lineitem_bronze_fct

actions:
  - name: lineitem_raw_load
    type: load
    operational_metadata: ["_processing_timestamp"]
    readMode: stream
    source:
      type: delta
      database: "{catalog}.{raw_schema}"
      table: lineitem
    target: v_lineitem_bronze
    description: "Load lineitem table from raw schema" 

  - name: lineitem_bronze_cleanse
    type: transform
    transform_type: sql
    source: v_lineitem_bronze
    target: v_lineitem_bronze_cleaned
    sql: |
      SELECT 
        l_orderkey as order_id,
        l_partkey as part_id,
        l_suppkey as supplier_id,
        l_linenumber as line_number,
        l_quantity as quantity,
        l_extendedprice as extended_price,
        l_discount as discount,
        l_tax as tax,
        l_returnflag as return_flag,
        l_linestatus as line_status,
        l_shipdate as ship_date,
        l_commitdate as commit_date,
        l_receiptdate as receipt_date,
        l_shipinstruct as ship_instruct,
        _source_file_path,
        _source_file_size,
        _source_file_modification_time,
        _record_hash,
        _processing_timestamp
      FROM stream(v_lineitem_bronze)

  - name: lineitem_bronze_DQE
    type: transform
    transform_type: data_quality
    source: v_lineitem_bronze_cleaned
    target: v_lineitem_bronze_DQE
    readMode: stream  
    expectations_file: "expectations/lineitem_quality.json"
    description: "Apply data quality checks to lineitem"

  - name: write_lineitem_bronze
    type: write
    source: v_lineitem_bronze_DQE
    write_target:
      type: streaming_table
      database: "{catalog}.{bronze_schema}"
      table: "lineitem_dim"
      mode: "cdc"
      
      # CDC configuration
      cdc_config:
        keys: ["order_id"]
        sequence_by: "_source_file_modification_time"
        scd_type: 1
        