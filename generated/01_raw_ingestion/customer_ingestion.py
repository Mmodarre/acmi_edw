# Generated by LakehousePlumber
# Pipeline: raw_ingestions
# FlowGroup: customer_ingestion
# Generated: 2025-07-11T10:24:09.814019

import dlt

# Pipeline Configuration
PIPELINE_ID = "customer_ingestion"
PIPELINE_GROUP = "raw_ingestions"

# ============================================================================
# SOURCE VIEWS
# ============================================================================


@dlt.view()
def v_customer_raw():
    """Load customer CSV files from landing volume"""
    df = (
        spark.readStream.format("cloudFiles")
        .option("cloudFiles.format", "csv")
        .option("cloudFiles.header", True)
        .option("cloudFiles.delimiter", "|")
        .option("cloudFiles.maxFilesPerTrigger", 10)
        .option("cloudFiles.inferColumnTypes", False)
        .option("cloudFiles.schemaEvolutionMode", "addNewColumns")
        .option("cloudFiles.rescuedDataColumn", "_rescued_data")
        .load("/Volumes/acmi_edw_dev/edw_raw/landing_volume/customer/*.csv")
    )

    return df


# ============================================================================
# TARGET TABLES
# ============================================================================

# Create the streaming table
dlt.create_streaming_table(
    name="acmi_edw_dev.edw_raw.customer",
    comment="Streaming table: customer",
    table_properties={
        "delta.autoOptimize.optimizeWrite": "true",
        "delta.enableChangeDataFeed": "true",
    },
)


# Define append flow(s)
@dlt.append_flow(
    target="acmi_edw_dev.edw_raw.customer",
    name="f_customer_bronze",
    comment="Append flow to acmi_edw_dev.edw_raw.customer",
)
def f_customer_bronze():
    """Append flow to acmi_edw_dev.edw_raw.customer"""
    # Streaming flow
    df = spark.readStream.table("v_customer_raw")

    return df
